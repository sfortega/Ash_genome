######methylation frequency upstream Fe_g40353 
library(dplyr)
genes=read.table("Sample1_meth_GEMs.upstream", header=F, sep="\t")
header= c("Contig", "start_gene", "end_gene", "strand", "Gene_ID", "contig", "start_methylation", "end_methylation", "num_motifs_in_group", "called_sites", "called_sites_methylated", "methylated_frequency", "group_sequence", "gene_and_methylation_overlap")
colnames(genes)<-c(header)
genes=genes[grep ("Fe_g40353",genes$Gene_ID),]
genes$Gene_size=genes$end_gene - genes$start_gene
###222115 15
genes$start_gene_percentage=c(1)
genes$end_gene_percentage=c(100)
genes$start_methylation_start_gene_difference=genes$start_methylation- genes$start_gene
genes$end_methylation_start_gene_difference=genes$end_methylation- genes$start_gene

genes=genes %>% mutate(start_meth_percentage = start_methylation_start_gene_difference / Gene_size)
genes=genes %>% mutate(end_meth_percentage = end_methylation_start_gene_difference / Gene_size)
genes$start_meth_percentage = 100*genes$start_meth_percentage
genes$end_meth_percentage = 100*genes$end_meth_percentage
write.table(genes, "Sample1_meth_GEMs_g40353.upstream_filt_coordinates", col.names=T, sep="\t")

###
library(dplyr)
genes_n=read.table("Sample3_meth_GEMs.upstream", header=F, sep="\t")
header= c("Contig", "start_gene", "end_gene", "strand", "Gene_ID", "contig", "start_methylation", "end_methylation", "num_motifs_in_group", "called_sites", "called_sites_methylated", "methylated_frequency", "group_sequence", "gene_and_methylation_overlap")
colnames(genes_n)<-c(header)
genes_n=genes_n[grep ("Fe_g40353",genes_n$Gene_ID),]
genes_n$Gene_size=genes_n$end_gene - genes_n$start_gene
###222115 15
genes_n$start_gene_percentage=c(1)
genes_n$end_gene_percentage=c(100)
genes_n$start_methylation_start_gene_difference=genes_n$start_methylation- genes_n$start_gene
genes_n$end_methylation_start_gene_difference=genes_n$end_methylation- genes_n$start_gene

genes_n=genes_n %>% mutate(start_meth_percentage = start_methylation_start_gene_difference / Gene_size)
genes_n=genes_n %>% mutate(end_meth_percentage = end_methylation_start_gene_difference / Gene_size)
genes_n$start_meth_percentage = 100*genes_n$start_meth_percentage
genes_n$end_meth_percentage = 100*genes_n$end_meth_percentage
write.table(genes_n, "Sample3_meth_GEMs_g40353.upstream_filt_coordinates", col.names=T, sep="\t")


#############################t.test

mean(genes$methylated_frequency)
mean(genes_n$methylated_frequency)

#[1] 0.2766429
#[1] 0.5685

####remove outliers
subset_outliers=subset(outliers, outliers$is.outlier=="TRUE")


genes_filt=genes[grep("Contig|methylated_frequency",colnames(genes))]
genes_filt$Type=c("Tolerant")
genes_n_filt=genes_n[grep("Contig|methylated_frequency",colnames(genes_n))]
genes_n_filt$Type=c("Susceptible")
join=rbind(genes_filt, genes_n_filt)
join$Type=factor(join$Type,levels=c("Susceptible","Tolerant"))
outliers=as.data.frame(join %>% 
  group_by(Type) %>%
  identify_outliers(methylated_frequency))
subset_outliers=subset(outliers, outliers$is.outlier=="TRUE")
join2=join[!join$methylated_frequency %in% subset_outliers$methylated_frequency,]


pwc <- pwc <- join2 %>%group_by()%>%
  t_test(methylated_frequency ~ Type) %>%add_significance

pwc
pwc$y.position=max(join$methylated_frequency)*1.05
Tolerant<-join2[grep("Tolerant",join2$Type),]
Susceptible<-join2[grep("Susceptible",join2$Type),]
mean(Tolerant$methylated_frequency)
mean(Susceptible$methylated_frequency)

#[1] 0.1726667
#[1] 0.5685

# A tibble: 1 Ã— 8
#  .y.                  group1      group2      n1    n2 statistic    df       p
#* <chr>                <chr>       <chr>    <int> <int>     <dbl> <dbl>   <dbl>
#1 methylated_frequency Susceptible Tolerant    14    12      4.09  16.4 0.00081

color_table <-  tibble(
  Treatment = c("Susceptible","Tolerant"),
  Color = c("#111111", "#009E73"))

tiff("Fe_g40353_box_upstream_all.tiff",res=300,he=50,wi=75,units="mm")
ggboxplot(data = join2, x = "Type", y = "methylated_frequency", fill = "Type") +
           labs(y = "Methylation frequency")  +scale_fill_manual(values = color_table$Color)+
    theme_bw()+geom_point(size=0.5)+
    theme(panel.grid.major.x = element_blank(),
          panel.grid.minor.x = element_blank(),
          panel.grid.major.y = element_blank(),
          panel.grid.minor.y = element_blank())+ 
theme(text = element_text(size = 8))+  
stat_pvalue_manual(pwc,size=1.8,face = "bold")+
   theme(legend.title = element_blank())+theme(axis.text.x = element_text(face = "bold"))
dev.off()
